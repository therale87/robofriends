{"version":3,"sources":["components/card.js","components/cardList.js","robots.js","components/searchBox.js","components/scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","phone","className","src","alt","CardList","robots","map","user","i","username","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","border","padding","margin","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e0a0d34.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.css';\r\n\r\nconst Card = ({ name, email, id, phone }) => {\r\n    return (\r\n        <div className=\"tc bg-red  dib br3 pa3 ma2 grow bw2 shadow-5 pointer w5\">\r\n            <img src={`https://robohash.org/${id}`} alt=\"robots\" />\r\n            <div>\r\n                <h2 className=\"white\">{name}</h2>\r\n                <p>{email}</p>\r\n                <p>{phone}</p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div className=\"mainWrapp\">\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card\r\n                            key={robots[i].id}\r\n                            id={robots[i].id}\r\n                            name={robots[i].name}\r\n                            email={robots[i].email}\r\n                            phone={robots[i].phone}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","export const robots = [{\r\n    id: 1,\r\n    name: 'Milos Raskovic',\r\n    username: 'Rale',\r\n    email: 'rale@gmail.com'\r\n},\r\n{\r\n    id: 2,\r\n    name: 'Milos Milovanovic',\r\n    username: 'Rale',\r\n    email: 'milos@gmail.com'\r\n},\r\n{\r\n    id: 3,\r\n    name: 'Pera Peric',\r\n    username: 'Pera',\r\n    email: 'pera@aol.com'\r\n},\r\n{\r\n    id: 4,\r\n    name: 'Uros Dimitrijevic',\r\n    username: 'Urke',\r\n    email: 'urke@gmail.com'\r\n},\r\n{\r\n    id: 5,\r\n    name: 'Tina Zenic',\r\n    username: 'Tince',\r\n    email: 'tina@yahoo.com'\r\n},\r\n{\r\n    id: 6,\r\n    name: 'Fico Hercegovac',\r\n    username: 'Fila',\r\n    email: 'fila@gmail.com'\r\n},\r\n{\r\n    id: 7,\r\n    name: 'Mina Sumice',\r\n    username: 'Mina',\r\n    email: 'mina@gmail.com'\r\n},\r\n{\r\n    id: 8,\r\n    name: 'Toma Jelic',\r\n    username: 'Toma',\r\n    email: 'toma@gmail.com'\r\n},\r\n{\r\n    id: 9,\r\n    name: 'Ivko Dragutinovic',\r\n    username: 'Ivke',\r\n    email: 'ivke@gmail.com'\r\n},\r\n{\r\n    id: 10,\r\n    name: 'Lepa Lukic',\r\n    username: 'Lepa',\r\n    email: 'lepa@gmail.com'\r\n},\r\n]\r\n\r\nexport default robots;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n        <input \r\n            className=\"pa3 ba b--orange bg-yellow red\"\r\n            type=\"search\"\r\n            placeholder=\"Search Robots\"\r\n            onChange = {searchChange}\r\n        />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return  (\r\n        <div style={ {border: '1px solid #ff4136', padding: '50px 0', margin: '50px 20px'} }>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/cardList';\r\nimport robots from '../robots';\r\nimport SearchBox from '../components/searchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/scroll';\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: robots,\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => { this.setState({ robots: users }) });\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n\r\n        if (this.state.robots.length === 0) {\r\n\r\n            return <h1>Loading...</h1>\r\n\r\n        } else {\r\n\r\n            return (\r\n\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\">Robofriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}